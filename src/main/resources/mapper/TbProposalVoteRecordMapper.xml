<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.nuls.dapp.communitygovernance.mapper.TbProposalVoteRecordMapper">
  <resultMap id="BaseResultMap" type="io.nuls.dapp.communitygovernance.model.TbProposalVoteRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="proposal_id" jdbcType="INTEGER" property="proposalId" />
    <result column="voter" jdbcType="VARCHAR" property="voter" />
    <result column="result" jdbcType="TINYINT" property="result" />
    <result column="votes" jdbcType="DECIMAL" property="votes" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, proposal_id, voter, result, votes, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="io.nuls.dapp.communitygovernance.model.TbProposalVoteRecordParam" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_proposal_vote_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_proposal_vote_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_proposal_vote_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="io.nuls.dapp.communitygovernance.model.TbProposalVoteRecordParam">
    delete from tb_proposal_vote_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.nuls.dapp.communitygovernance.model.TbProposalVoteRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_proposal_vote_record (proposal_id, voter, result, 
      votes, create_time, update_time
      )
    values (#{proposalId,jdbcType=INTEGER}, #{voter,jdbcType=VARCHAR}, #{result,jdbcType=TINYINT}, 
      #{votes,jdbcType=DECIMAL}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="io.nuls.dapp.communitygovernance.model.TbProposalVoteRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_proposal_vote_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="proposalId != null">
        proposal_id,
      </if>
      <if test="voter != null">
        voter,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="votes != null">
        votes,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="proposalId != null">
        #{proposalId,jdbcType=INTEGER},
      </if>
      <if test="voter != null">
        #{voter,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=TINYINT},
      </if>
      <if test="votes != null">
        #{votes,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.nuls.dapp.communitygovernance.model.TbProposalVoteRecordParam" resultType="java.lang.Long">
    select count(*) from tb_proposal_vote_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_proposal_vote_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.proposalId != null">
        proposal_id = #{record.proposalId,jdbcType=INTEGER},
      </if>
      <if test="record.voter != null">
        voter = #{record.voter,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=TINYINT},
      </if>
      <if test="record.votes != null">
        votes = #{record.votes,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_proposal_vote_record
    set id = #{record.id,jdbcType=INTEGER},
      proposal_id = #{record.proposalId,jdbcType=INTEGER},
      voter = #{record.voter,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=TINYINT},
      votes = #{record.votes,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.nuls.dapp.communitygovernance.model.TbProposalVoteRecord">
    update tb_proposal_vote_record
    <set>
      <if test="proposalId != null">
        proposal_id = #{proposalId,jdbcType=INTEGER},
      </if>
      <if test="voter != null">
        voter = #{voter,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=TINYINT},
      </if>
      <if test="votes != null">
        votes = #{votes,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.nuls.dapp.communitygovernance.model.TbProposalVoteRecord">
    update tb_proposal_vote_record
    set proposal_id = #{proposalId,jdbcType=INTEGER},
      voter = #{voter,jdbcType=VARCHAR},
      result = #{result,jdbcType=TINYINT},
      votes = #{votes,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>